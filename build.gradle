buildscript {
  repositories {
    mavenCentral()
    mavenLocal()
  }

  dependencies { classpath 'com.darylteo.vertx:vertx-gradle-plugin:0.1.0-SNAPSHOT' }
}

apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'vertx'

repositories {
  maven { url 'http://repo.gradle.org/gradle/libs-releases-local' }
  mavenCentral()
  mavenLocal()
}

dependencies {
  compile("org.gradle:gradle-tooling-api:${toolingApiVersion}") {
    exclude group: 'org.slf4j', module: 'slf4j-api'
  }
  compile "com.darylteo:directory-watcher:${watcherVersion}"
}

vertx {
  platform {
    version '2.0.2-final'
    groovy '2.0.0-final'
  }

  info {
    groupId project.group
    artifactId project.name
    version project.version
  }

  config {
    // flags
    autoRedeploy true
    preserveCwd true
    worker true

    // config
    main 'groovy:com.darylteo.vertx.sentinel.MainVerticle'
  }
  
  deployments {
    mod {
      config {
        delay 1000
        tasks 'help', 'copyMod'
      }
    }
  }
}

def release = !project.version.endsWith('-SNAPSHOT')

configurations {
  archives
}

artifacts {
  archives modZip
}

signing {
  required { release && gradle.taskGraph.hasTask('uploadArchives') }
  sign configurations.archives 
}

uploadArchives {
  repositories {
    mavenDeployer {
      def url = !release ? 'https://oss.sonatype.org/content/repositories/snapshots/' : 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
      repository(url: url) {
        authentication(userName: sonatypeUsername, password : sonatypePassword)
      }

      beforeDeployment { dep ->
        signing.signPom(dep)
      }
      
      uniqueVersion = false
      configuration = configurations.archives
    }
  }
}